<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="rss.css" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Michael Skyba</title>
<description>Michael Skyba's RSS Feed</description>
<language>en-us</language>
<link>https://michaelskyba.xyz/rss.xml</link>
<atom:link href="https://michaelskyba.xyz/rss.xml" rel="self" type="application/rss+xml" />

<!-- LB -->

<item>
<title></title>
<guid>https://michaelskyba.xyz/rolling.html#block-a-site-using-etchosts</guid>
<pubDate>Sat, 24 Jul 2021 18:42:17 -0400</pubDate>
<description><![CDATA[
<p>Just add:</p>

<code>
0.0.0.0 mysite
</code>

<p>to your /etc/hosts file.</p>

<p>Example:</p>

<code>
0.0.0.0 facebook.com
</code>
<p>Here, facebook.com will basically be an alias for '0.0.0.0' which acts as a dummy address.</p>

<p>This is a really simple thing that doesn't need an entire page of web bloat to explain...</p>

<a href="https://github.com/StevenBlack/hosts">List of sites you may want to block</a>
]]></description>
</item>


<item>
<title></title>
<guid>https://michaelskyba.xyz/rolling.html#get-a-working-wifi-connection-in-an-artix-installation</guid>
<pubDate>Sat, 24 Jul 2021 18:39:32 -0400</pubDate>
<description><![CDATA[

<br>

<p>While Arch and Gentoo have had internet working mostly
out-of-the-box, Artix has not. I thought it could be beneficial
if I compiled a list of steps:</p>

<ol>
	<li>
		Create /etc/wpa_supplicant/wpa_supplicant.conf with the following lines:
		<br>
		<code>
		ctrl_interface=/run/wpa_supplicant
		<br>
		update_config=1
		</code>
	</li>
	<li> Make sure rfkill isn't messing things up: <code>sudo rfkill unblock wifi</code>
	</li>
	<li>
		Start wpa_supplicant: <code>sudo wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf</code>
		<br>
		My device name was 'wlan0', but you should edit the command if yours is different.
	</li>
	<li>
		Run wpa_cli (for me it didn't work without root):
		<br>
		<code>
		sudo wpa_cli
		<br>
		scan
		<br>
		scan_results
		<br>
		add_network
		<br>
		set_network 0 ssid "{the name of your wifi network}"
		<br>
		set_network 0 psk "{the password of your wifi network}"
		<br>
		enable_network 0
		<br>
		save_config
		<br>
		quit
		</code>
	</li>
	<li>Start dhcpcd: <code>sudo dhcpcd</code></li>
</ol>

<p>Now, you should be done. I've done two Artix Installs and both of them have
succeeded with this procedure. Note that for both I have used the base-runit
installation, it's possible that using a different init system (openrc and s6
are available currently) will require different steps.</p>

<br>
]]></description>
</item>


<item>
<title>msk_music</title>
<guid>https://michaelskyba.xyz/rolling.html#mskmusic</guid>
<pubDate>Fri, 23 Jul 2021 23:22:45 -0400</pubDate>
<description><![CDATA[
<p> I have decided to put this "blog" to use for sharing scripts I write, in
hopes that one or two of them could be of use to somebody.</p>

<a style="font-size: 18px;" href="https://gist.github.com/michaelskyba/2e04107265d4255671bb597581afd76a">msk_music</a>

<p>msk_music is a simple and featureless way of listening to music. It uses the
equivalent of "random" and "consume" modes on mpd (which it aims to replace). For
my use cases, which I believe are fairly standard, it does so successfully.</p>

<p>Instead of having a vast number of configuration options, additional features
can be implemented by changing the source code, which, due to being written in
shell, is completely transparent. For instance,
<a href="https://gist.github.com/michaelskyba/697a06b1f53f3f8a14e94bd9ccf4de3e">this</a>
patch will have msk_music only run on .mp4 files.</p>

<p>msk_music depends on mpv and a set of coreutils that support sed's "-i" flag.
msk_music is around 20 LOC, and was written in about 10 minutes.</p>
]]></description>
</item>


<item>
<title>Get a working Wi-Fi connection in an Artix installation</title>
<guid>https://michaelskyba.xyz/rolling.html#get-a-working-wifi-connection-in-an-artix-installation</guid>
<pubDate>Tue, 20 Apr 2021 19:38:13 -0400</pubDate>
<description><![CDATA[

<style>
	p {
		max-width: 800px;
		margin: auto;
		text-align: center;
	}

	ol {
		margin-left: auto;
		margin-right: auto;
		max-width: 800px;
	}
</style>

<br>

<p>While Arch and Gentoo have had internet working mostly
out-of-the-box, Artix has not. I thought it could be beneficial
if I compiled a list of steps:</p>

<ol>
	<li>
		Create /etc/wpa_supplicant/wpa_supplicant.conf with the following lines:
		<br>
		<code>
		ctrl_interface=/run/wpa_supplicant
		<br>
		update_config=1
		</code>
	</li>
	<li> Make sure rfkill isn't messing things up: <code>sudo rfkill unblock wifi</code>
	</li>
	<li>
		Start wpa_supplicant: <code>sudo wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf</code>
		<br>
		My device name was 'wlan0', but you should edit the command if yours is different.
	</li>
	<li>
		Run wpa_cli (for me it didn't work without root):
		<br>
		<code>
		sudo wpa_cli
		<br>
		scan
		<br>
		scan_results
		<br>
		add_network
		<br>
		set_network 0 ssid "{the name of your wifi network}"
		<br>
		set_network 0 psk "{the password of your wifi network}"
		<br>
		enable_network 0
		<br>
		save_config
		<br>
		quit
		</code>
	</li>
	<li>Start dhcpcd: <code>sudo dhcpcd</code></li>
</ol>

<p>Now, you should be done. I've done two Artix Installs and both of them have
succeeded with this procedure. Note that for both I have used the base-runit
installation, it's possible that using a different init system (openrc and s6
are available currently) will require different steps.</p>

<br>
]]></description>
</item>














<item>
<title>/usr/share/dict/words not found</title>
<guid>https://michaelskyba.xyz/rolling.html#usrsharedictwords-not-found</guid>
<pubDate>Tue, 20 Apr 2021 19:39:56 -0400</pubDate>
<description><![CDATA[
<div>
On Arch and Arch-based distros, install the <a href="https://archlinux.org/packages/community/any/words/">words</a> package if you don't have it.
</div>

<div>
Here's a script I wrote for checking if you spelled a word correctly: <a href="https://gist.github.com/michaelskyba/5be53dbc7e1bc7b9a701893f8bee2d19">spell</a>
It depends on aspell, which needs the /usr/share/dict/words file. I understand that it's extremely ugly: I do not have any shell scripting experience.
</div>
]]></description>
</item>




<item>
<title>block a site using /etc/hosts</title>
<guid>https://michaelskyba.xyz/rolling.html#block-a-site-using-etchosts</guid>
<pubDate>Tue, 20 Apr 2021 19:15:13 -0400</pubDate>
<description><![CDATA[
<p>Just add:</p>

<code>
0.0.0.0 mysite
</code>

<p>to your /etc/hosts file.</p>

<p>Example:</p>

<code>
0.0.0.0 facebook.com
</code>
<p>Here, facebook.com will basically be an alias for '0.0.0.0' which acts as a dummy address.</p>

<p>This is a really simple thing that doesn't need an entire page of web bloat to explain...</p>

<a href="https://github.com/StevenBlack/hosts">List of sites you may want to block</a>
]]></description>
</item>








</channel>
</rss>
